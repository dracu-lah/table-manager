import React, { useState } from "react";
import {
  Calendar,
  Clock,
  Search,
  Users,
  ChevronDown,
  Filter,
  X,
} from "lucide-react";

const RestaurantTableManagement = () => {
  // State management
  const [selectedZone, setSelectedZone] = useState(1);
  const [selectedDate, setSelectedDate] = useState("06/05/2025");
  const [selectedTime, setSelectedTime] = useState("10:00 AM");
  const [currentView, setCurrentView] = useState("Table Management");
  const [searchTerm, setSearchTerm] = useState("");
  const [selectedTable, setSelectedTable] = useState(null);

  // Mock data
  const zones = [
    { id: 1, name: "Zone -1", active: true },
    { id: 2, name: "Zone -2", active: false },
    { id: 3, name: "Zone -3", active: false },
    { id: 4, name: "Zone -4", active: false },
    { id: 5, name: "Zone -5", active: false },
    { id: 6, name: "Zone -6", active: false },
  ];

  const tables = [
    {
      id: "T-1",
      zone: 1,
      status: "available",
      seats: 6,
      position: { x: 425, y: 420 },
      size: "large",
      shape: "rectangle",
    },
    {
      id: "T-2",
      zone: 1,
      status: "occupied",
      seats: 8,
      position: { x: 70, y: 440 },
      size: "large",
      shape: "round",
    },
    {
      id: "T-3",
      zone: 1,
      status: "available",
      seats: 6,
      position: { x: 220, y: 390 },
      size: "medium",
      shape: "round",
    },
    {
      id: "T-4",
      zone: 1,
      status: "available-soon",
      seats: 4,
      position: { x: 390, y: 180 },
      size: "medium",
      shape: "round",
    },
    {
      id: "T-5",
      zone: 1,
      status: "available",
      seats: 6,
      position: { x: 240, y: 140 },
      size: "large",
      shape: "round",
    },
    {
      id: "T-6",
      zone: 1,
      status: "available",
      seats: 4,
      position: { x: 510, y: 190 },
      size: "medium",
      shape: "square",
    },
    {
      id: "T-7",
      zone: 1,
      status: "available",
      seats: 4,
      position: { x: 630, y: 120 },
      size: "medium",
      shape: "round",
    },
    {
      id: "T-8",
      zone: 1,
      status: "available",
      seats: 4,
      position: { x: 630, y: 250 },
      size: "medium",
      shape: "round",
    },
    {
      id: "T-9",
      zone: 1,
      status: "available",
      seats: 4,
      position: { x: 630, y: 380 },
      size: "medium",
      shape: "round",
    },
    {
      id: "T-10",
      zone: 1,
      status: "available",
      seats: 4,
      position: { x: 630, y: 510 },
      size: "medium",
      shape: "round",
    },
    {
      id: "T-11",
      zone: 1,
      status: "available",
      seats: 4,
      position: { x: 520, y: 450 },
      size: "medium",
      shape: "square",
    },
    {
      id: "T-12",
      zone: 1,
      status: "available-soon",
      seats: 4,
      position: { x: 520, y: 320 },
      size: "medium",
      shape: "round",
    },
  ];

  const reservations = [
    {
      id: 1,
      name: "Prakash Varmma",
      time: "10:00 AM",
      guests: 4,
      table: "T-12",
      status: "arrived",
      phone: "JK09120",
    },
    {
      id: 2,
      name: "Sarath Suresh",
      time: "10:01 AM",
      guests: 4,
      table: "T-02",
      status: "arrived",
      phone: "JK09120",
    },
    {
      id: 3,
      name: "Muhammed Irshad",
      time: "10:05 AM",
      guests: 4,
      table: "T-02",
      status: "arrived",
      phone: "JK09120",
    },
    {
      id: 4,
      name: "Sharon Viswanathan",
      time: "11:00 AM",
      guests: 4,
      table: "T-02",
      status: "arrived",
      phone: "JK09120",
    },
    {
      id: 5,
      name: "Prakash Varmma",
      time: "11:30 AM",
      guests: 4,
      table: "T-05",
      status: "waiting",
      phone: "JK09120",
    },
  ];

  const waitingList = reservations.filter((r) => r.status === "waiting");
  const reservedList = reservations.filter((r) => r.status === "arrived");
  const seatedList = reservations.filter((r) => r.status === "seated");

  const getTableColor = (status) => {
    switch (status) {
      case "available":
        return "bg-blue-500";
      case "available-soon":
        return "bg-yellow-400";
      case "occupied":
        return "bg-red-500";
      default:
        return "bg-gray-400";
    }
  };

  const getTableShape = (shape, size) => {
    const baseClasses =
      "absolute flex items-center justify-center text-white font-semibold cursor-pointer hover:opacity-80 transition-opacity";
    const sizeClasses = {
      small: "w-12 h-12 text-xs",
      medium: "w-16 h-16 text-sm",
      large: "w-20 h-20 text-base",
    };
    const shapeClasses = {
      round: "rounded-full",
      square: "rounded-lg",
      rectangle: "rounded-lg",
    };

    return `${baseClasses} ${sizeClasses[size]} ${shapeClasses[shape]}`;
  };

  const getStatusColor = (status) => {
    switch (status) {
      case "arrived":
        return "bg-green-100 text-green-800";
      case "waiting":
        return "bg-blue-100 text-blue-800";
      case "seated":
        return "bg-gray-100 text-gray-800";
      case "cancelled":
        return "bg-orange-100 text-orange-800";
      default:
        return "bg-gray-100 text-gray-800";
    }
  };

  return (
    <div className="flex h-screen bg-gray-50">
      {/* Main Content */}
      <div className="flex-1 flex flex-col">
        {/* Header */}
        <header className="bg-white border-b border-gray-200 px-6 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <button className="text-gray-600 hover:text-gray-800">
                <svg
                  className="w-6 h-6"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={2}
                    d="M15 19l-7-7 7-7"
                  />
                </svg>
              </button>
              <span className="text-gray-600">Back</span>
            </div>

            <div className="flex items-center space-x-6">
              <div className="flex items-center space-x-2">
                <Calendar className="w-5 h-5 text-gray-500" />
                <select className="border border-gray-300 rounded-md px-3 py-1 text-sm">
                  <option>{selectedDate}</option>
                </select>
              </div>

              <div className="flex items-center space-x-2">
                <Clock className="w-5 h-5 text-gray-500" />
                <select className="border border-gray-300 rounded-md px-3 py-1 text-sm">
                  <option>{selectedTime}</option>
                </select>
              </div>

              <div className="flex items-center space-x-4">
                <button
                  className={`px-4 py-2 text-sm ${currentView === "Reservations" ? "text-gray-800" : "text-gray-600"}`}
                >
                  Reservations
                </button>
                <button
                  className={`px-4 py-2 text-sm rounded-md ${currentView === "Table Management" ? "bg-black text-white" : "text-gray-600"}`}
                >
                  Table Management
                </button>
                <button
                  className={`px-4 py-2 text-sm ${currentView === "Waitlist" ? "text-gray-800" : "text-gray-600"}`}
                >
                  Waitlist
                </button>
              </div>

              <div className="bg-orange-500 text-white px-3 py-1 rounded-md text-sm flex items-center">
                <Users className="w-4 h-4 mr-1" />
                50/80
              </div>
            </div>
          </div>
        </header>

        {/* Zone Selection */}
        <div className="bg-white border-b border-gray-200 px-6 py-4">
          <div className="flex items-center space-x-4">
            <select className="border border-gray-300 rounded-md px-3 py-2 text-sm">
              <option>Restaurant-1</option>
            </select>

            <div className="flex space-x-2">
              {zones.map((zone) => (
                <button
                  key={zone.id}
                  onClick={() => setSelectedZone(zone.id)}
                  className={`px-4 py-2 text-sm rounded-md transition-colors ${
                    zone.id === selectedZone
                      ? "bg-blue-500 text-white"
                      : "bg-gray-100 text-gray-700 hover:bg-gray-200"
                  }`}
                >
                  {zone.name}
                </button>
              ))}
            </div>
          </div>
        </div>

        {/* Main Layout */}
        <div className="flex-1 flex">
          {/* Floor Plan */}
          <div className="flex-1 p-6">
            <div className="relative bg-white rounded-lg border-2 border-gray-300 h-full">
              {/* Legend Icons */}
              <div className="absolute top-4 left-4 space-y-2">
                <div className="w-12 h-12 bg-black rounded-full flex items-center justify-center">
                  <svg
                    className="w-6 h-6 text-white"
                    viewBox="0 0 24 24"
                    fill="currentColor"
                  >
                    <path d="M12 2C13.1 2 14 2.9 14 4C14 5.1 13.1 6 12 6C10.9 6 10 5.1 10 4C10 2.9 10.9 2 12 2ZM21 9V7L15 1H9V3H7V1H5V7H3V9H5V23H7V9H9V23H11V9H13V23H15V9H17V23H19V9H21Z" />
                  </svg>
                </div>
                <div className="w-12 h-12 bg-yellow-500 rounded-sm flex items-center justify-center">
                  <svg
                    className="w-6 h-6 text-white"
                    viewBox="0 0 24 24"
                    fill="currentColor"
                  >
                    <path d="M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-1.91l-.01-.01L23 10z" />
                  </svg>
                </div>
              </div>

              {/* Zone Numbers */}
              <div className="absolute top-8 left-1/2 transform -translate-x-1/2 text-6xl font-bold text-gray-300">
                1
              </div>
              <div className="absolute top-8 right-8 text-6xl font-bold text-gray-300">
                2
              </div>
              <div className="absolute bottom-1/3 right-8 text-6xl font-bold text-gray-300">
                3
              </div>
              <div className="absolute bottom-8 left-8 text-6xl font-bold text-gray-300">
                4
              </div>

              {/* Tables */}
              {tables.map((table) => (
                <div
                  key={table.id}
                  className={`${getTableShape(table.shape, table.size)} ${getTableColor(table.status)}`}
                  style={{
                    left: `${table.position.x - (table.size === "large" ? 40 : table.size === "medium" ? 32 : 24)}px`,
                    top: `${table.position.y - (table.size === "large" ? 40 : table.size === "medium" ? 32 : 24)}px`,
                  }}
                  onClick={() => setSelectedTable(table)}
                >
                  {table.id}
                </div>
              ))}

              {/* Status Legend */}
              <div className="absolute bottom-4 left-4 bg-white rounded-lg p-4 shadow-lg">
                <div className="flex space-x-6 text-sm">
                  <div className="flex items-center space-x-2">
                    <div className="w-4 h-4 bg-blue-500 rounded"></div>
                    <span>Available</span>
                  </div>
                  <div className="flex items-center space-x-2">
                    <div className="w-4 h-4 bg-yellow-400 rounded"></div>
                    <span>Available Soon</span>
                  </div>
                  <div className="flex items-center space-x-2">
                    <div className="w-4 h-4 bg-red-500 rounded"></div>
                    <span>Occupied</span>
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* Right Sidebar */}
          <div className="w-80 bg-white border-l border-gray-200 flex flex-col">
            {/* Sidebar Header */}
            <div className="p-4 border-b border-gray-200">
              <div className="flex items-center justify-between">
                <h3 className="text-lg font-semibold">Reservations</h3>
                <ChevronDown className="w-5 h-5 text-gray-500" />
              </div>
              <div className="mt-3 relative">
                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" />
                <input
                  type="text"
                  placeholder="Search"
                  className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md text-sm"
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                />
                <Filter className="absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" />
              </div>
            </div>

            {/* Reservation Lists */}
            <div className="flex-1 overflow-y-auto">
              {/* Waiting List */}
              <div className="p-4 border-b border-gray-200">
                <div className="flex items-center justify-between mb-3">
                  <h4 className="font-medium text-gray-900">Waiting list</h4>
                  <div className="flex items-center space-x-2">
                    <Users className="w-4 h-4 text-gray-400" />
                    <span className="text-sm text-gray-600">
                      {waitingList.length}
                    </span>
                  </div>
                </div>
                {waitingList.map((reservation) => (
                  <div
                    key={reservation.id}
                    className="mb-3 p-3 bg-gray-50 rounded-lg"
                  >
                    <div className="flex items-center justify-between">
                      <div>
                        <h5 className="font-medium text-gray-900">
                          {reservation.name}
                        </h5>
                        <p className="text-sm text-gray-600">
                          {reservation.time}
                        </p>
                        <p className="text-sm text-gray-600">
                          {reservation.phone}
                        </p>
                      </div>
                      <div className="flex items-center space-x-2">
                        <Users className="w-4 h-4 text-gray-400" />
                        <span className="text-sm">{reservation.guests}</span>
                      </div>
                    </div>
                    <div className="mt-2 flex items-center justify-between">
                      <span className="px-2 py-1 text-xs bg-yellow-100 text-yellow-800 rounded">
                        {reservation.table}
                      </span>
                      <span
                        className={`px-2 py-1 text-xs rounded ${getStatusColor(reservation.status)}`}
                      >
                        {reservation.status.charAt(0).toUpperCase() +
                          reservation.status.slice(1)}
                      </span>
                    </div>
                  </div>
                ))}
              </div>

              {/* Reserved */}
              <div className="p-4 border-b border-gray-200">
                <div className="flex items-center justify-between mb-3">
                  <h4 className="font-medium text-gray-900">Reserved</h4>
                  <div className="flex items-center space-x-2">
                    <Users className="w-4 h-4 text-gray-400" />
                    <span className="text-sm text-gray-600">
                      {reservedList.length}
                    </span>
                  </div>
                </div>
                {reservedList.map((reservation) => (
                  <div
                    key={reservation.id}
                    className="mb-3 p-3 bg-gray-50 rounded-lg"
                  >
                    <div className="flex items-center justify-between">
                      <div>
                        <h5 className="font-medium text-gray-900">
                          {reservation.name}
                        </h5>
                        <p className="text-sm text-gray-600">
                          {reservation.time}
                        </p>
                        <p className="text-sm text-gray-600">
                          {reservation.phone}
                        </p>
                      </div>
                      <div className="flex items-center space-x-2">
                        <Users className="w-4 h-4 text-gray-400" />
                        <span className="text-sm">{reservation.guests}</span>
                      </div>
                    </div>
                    <div className="mt-2 flex items-center justify-between">
                      <span className="px-2 py-1 text-xs bg-yellow-100 text-yellow-800 rounded">
                        {reservation.table}
                      </span>
                      <div className="flex space-x-1">
                        <span
                          className={`px-2 py-1 text-xs rounded ${getStatusColor(reservation.status)}`}
                        >
                          Arrived
                        </span>
                        <button className="w-6 h-6 bg-gray-200 rounded flex items-center justify-center">
                          <X className="w-3 h-3 text-gray-600" />
                        </button>
                      </div>
                    </div>
                  </div>
                ))}
              </div>

              {/* Seated */}
              <div className="p-4">
                <div className="flex items-center justify-between mb-3">
                  <h4 className="font-medium text-gray-900">Seated</h4>
                  <div className="flex items-center space-x-2">
                    <Users className="w-4 h-4 text-gray-400" />
                    <span className="text-sm text-gray-600">32</span>
                  </div>
                </div>
              </div>
            </div>

            {/* Book Table Button */}
            <div className="p-4 border-t border-gray-200">
              <button className="w-full bg-gray-100 text-gray-800 py-3 rounded-lg font-medium hover:bg-gray-200 transition-colors">
                Book Table
              </button>
            </div>

            {/* Status Legend */}
            <div className="p-4 border-t border-gray-200">
              <div className="grid grid-cols-2 gap-2 text-xs">
                <div className="flex items-center space-x-2">
                  <div className="w-3 h-3 bg-green-500 rounded"></div>
                  <span>Seated</span>
                </div>
                <div className="flex items-center space-x-2">
                  <div className="w-3 h-3 bg-blue-500 rounded"></div>
                  <span>Waiting</span>
                </div>
                <div className="flex items-center space-x-2">
                  <div className="w-3 h-3 bg-orange-500 rounded"></div>
                  <span>Cancelled</span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default RestaurantTableManagement;
